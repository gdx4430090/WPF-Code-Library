<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Watirx.Controls">
   
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Watirx.Controls;component/Resources/Properties.xaml"/>
        <ResourceDictionary Source="/Watirx.Controls;component/Themes/Generic.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--#region CButton-->
    <ControlTemplate x:Key="CButton_Template" TargetType="{x:Type local:CButton}">
        <Border x:Name="border"  SnapsToDevicePixels="true" 
                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CornerRadius}"
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}">
            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>-->
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MouseOverBackground}" TargetName="border"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MouseOverForeground}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MouseOverBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PressedBackground}" TargetName="border"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PressedForeground}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PressedBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DisabledBackground}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DisabledForeground}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DisabledBorderBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:CButton}" x:Key="DefaultCButtonStyle">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FontFamily" Value="{StaticResource FontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource MicroFontSize}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Width" Value="{StaticResource ButtonWidth}" />
        <Setter Property="Height" Value="{StaticResource ButtonHeight}" />
        <Setter Property="Template" Value="{StaticResource CButton_Template}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="CornerRadius" Value="5" />
    </Style>

    <Style TargetType="{x:Type local:CButton}" BasedOn="{StaticResource DefaultCButtonStyle}"/>
    <!--#endregion-->

    <!--#region CIconButton -->
    <!--CIconButton控件模板-->
    <ControlTemplate x:Key="CIconButton_Template" TargetType="{x:Type local:CIconButton}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}" 
                Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Height}" 
                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CornerRadius}"
                Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Width}">
            <!--Icon/Text-->
            <StackPanel Orientation="{TemplateBinding Orientation}" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <!--Icon-->
                <TextBlock x:Name="icon"  Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FIconMargin}" 
                           RenderTransformOrigin="0.5,0.5" Style="{StaticResource FIcon}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FIcon}" 
                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FIconSize}" 
                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}">
                    <TextBlock.RenderTransform>
                        <RotateTransform x:Name="transIcon" Angle="0"/>
                    </TextBlock.RenderTransform>
                </TextBlock>
                <!--Text-->
                <TextBlock VerticalAlignment="Center"  x:Name="txt" 
                           TextDecorations="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentDecorations}" 
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" 
                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FontSize}"
                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"/>
            </StackPanel>
        </Border>
        <!--触发器-->
        <ControlTemplate.Triggers>

            <!--设置鼠标进入时的背景、前景样式-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MouseOverBackground}" TargetName="border" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MouseOverForeground}" TargetName="icon"/>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MouseOverForeground}" TargetName="txt"/>
            </Trigger>

            <!--鼠标按下时的前景、背景样式-->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PressedBackground}" TargetName="border" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PressedForeground}" TargetName="icon"/>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PressedForeground}" TargetName="txt"/>
            </Trigger>

            <!--禁用状态-->
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" TargetName="border"/>
                <!--<Setter Property="Background" TargetName="border" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DisabledBackground}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DisabledForeground}"/>-->
            </Trigger>

            <!--Ficon的动画触发器-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true"></Condition>
                    <Condition Property="AllowsAnimation" Value="true"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="180" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--默认CIconButton样式-->
    <Style TargetType="{x:Type local:CIconButton}">
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Padding" Value="3,1,3,1" />
        <Setter Property="Content" Value="{x:Null}" />

        <Setter Property="MouseOverBackground" Value="{StaticResource ButtonMouseOverBackground}" />
        <Setter Property="MouseOverForeground" Value="{StaticResource ButtonMouseOverForeground}" />
        <Setter Property="PressedBackground" Value="{StaticResource ButtonPressedBackground}" />
        <Setter Property="PressedForeground" Value="{StaticResource ButtonPressedForeground}" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="FIconSize" Value="22" />
        <Setter Property="FIconMargin" Value="0,0,5,0" />
        <Setter Property="AllowsAnimation" Value="False" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="Template" Value="{StaticResource CIconButton_Template}"/>
    </Style>

    <!--背景透明的CIconButton样式-->
    <Style x:Key="CIconButton_Transparency" TargetType="{x:Type local:CIconButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MouseOverBackground" Value="Transparent" />
        <Setter Property="PressedBackground" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource TextForeground}" />
        <Setter Property="MouseOverForeground" Value="{StaticResource MouseOverForeground}" />
        <Setter Property="PressedForeground" Value="{StaticResource PressedForeground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FIconSize" Value="20" />
        <Setter Property="Template" Value="{StaticResource CIconButton_Template}"/>
        <Setter Property="Padding" Value="3,1,3,1" />
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="FIconMargin" Value="0,0,2,0" />
        <Setter Property="AllowsAnimation" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <!--LinkButton的CIconButton样式，默认无FIcon-->
    <Style x:Key="CIconButton_LinkButton" TargetType="{x:Type local:CIconButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource LinkForeground}" />

        <Setter Property="MouseOverBackground" Value="Transparent" />
        <Setter Property="MouseOverForeground" Value="{StaticResource MouseOverForeground}" />

        <Setter Property="PressedBackground" Value="Transparent" />
        <Setter Property="PressedForeground" Value="{StaticResource PressedForeground}" />

        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Padding" Value="3,1,3,1" />
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />

        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="FIconSize" Value="20" />
        <Setter Property="FIconMargin" Value="0" />
        <Setter Property="FIcon" Value="" />
        <Setter Property="AllowsAnimation" Value="False" />
        <Setter Property="ContentDecorations" Value="Underline" />
        <Setter Property="Template" Value="{StaticResource CIconButton_Template}"/>
    </Style>
    <!--#endregion-->
    
    <!--#region CImgButton -->

    <!--CImgButton控件模板-->
    <ControlTemplate x:Key="CImgButton_Template" TargetType="{x:Type local:CImgButton}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}" 
                Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Height}" 
                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CornerRadius}"
                Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Width}">
            <!--Img/Text-->
            <StackPanel Orientation="{TemplateBinding Orientation}" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <!--Img-->
                <Image x:Name="PART_ImageSource" Source="{TemplateBinding ImageSource}" Stretch="Uniform" 
                       Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FImageSize}"
                       Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FImageSize}"
                       Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FImageMargin}"/>

                <!--Text-->
                <TextBlock VerticalAlignment="Center"  x:Name="txt" 
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" 
                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FontSize}"
                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"
                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
            </StackPanel>
        </Border>
        <!--触发器-->
        <ControlTemplate.Triggers>

            <!--设置鼠标进入时的背景、前景样式-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MouseOverBackground}" TargetName="border" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MouseOverForeground}" TargetName="txt"/>
                <Setter TargetName="PART_ImageSource" Property="Source" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MouseMoveImageSource}"/>
            </Trigger>

            <!--鼠标按下时的前景、背景样式-->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PressedBackground}" TargetName="border" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PressedForeground}" TargetName="txt"/>
                <Setter TargetName="PART_ImageSource" Property="Source" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=PressedImageSource}"/>
            </Trigger>

            <!--禁用状态-->
            <Trigger Property="IsEnabled" Value="false">
                <!--<Setter Property="Opacity" Value="0.5" TargetName="border"/>-->
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DisabledBackground}" TargetName="border" />
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DisabledForeground}" TargetName="txt"/>
                <Setter TargetName="PART_ImageSource" Property="Source" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DisabledImageSource}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type local:CImgButton}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Padding" Value="3,1,3,1" />
        <Setter Property="Content" Value="{x:Null}" />

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}" />

        <Setter Property="MouseOverBackground" Value="Transparent" />
        <Setter Property="MouseOverForeground" Value="{StaticResource ButtonMouseOverForeground}" />

        <Setter Property="PressedBackground" Value="Transparent" />
        <Setter Property="PressedForeground" Value="{StaticResource ButtonMouseOverForeground}" />

        <Setter Property="DisabledBackground" Value="Transparent" />
        <Setter Property="DisabledForeground" Value="{StaticResource ButtonDisableForeground}" />

        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="FImageSize" Value="30" />
        <Setter Property="FImageMargin" Value="5" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="Template" Value="{StaticResource CImgButton_Template}"/>
    </Style>

    <!--#endregion-->

</ResourceDictionary>